{"version":3,"sources":["images/tmdb_icon.svg","components/Footer.js","images/Logo-Netflix.png","components/Header.js","components/Filter.js","components/Loader.js","components/Main.js","services/callToApi.js","components/MediaDetails.js","components/App.js","index.js"],"names":["Footer","className","href","target","rel","title","role","src","tmbdLogo","alt","Header","to","netflixLogo","Filter","props","onSubmit","ev","preventDefault","action","autoFocus","onKeyUp","handleSearch","value","type","placeholder","Loader","loading","displayLoader","Main","renderMedia","objectToExport","getConfiguration","fetch","then","response","json","images","secure_base_url","backdrop_sizes","getTrendingMedia","console","log","results","map","movie","id","imagePath","poster_path","titleMovie","original_title","titleShow","name","mediaType","media_type","genre","genre_ids","banner","backdrop_path","overview","getMovieGenres","genres","getShowGenres","MediaDetails","media","genreList","whatGenre","genreAsParagraph","App","useState","setiImagePath","mediaToRender","setMediaToRender","movieGenres","setMovieGenres","showGenres","setShowGenres","search","setSearch","setLoading","useEffect","callToApi","filteredData","filter","toLocaleLowerCase","includes","routeData","useRouteMatch","mediaId","params","clickedMedia","find","parseInt","exact","path","length","genreIdList","genreId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6d8406d5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/tmdb_icon.de1a664e.svg\";","import '../styles/layout/Footer.scss';\r\nimport tmbdLogo from '../images/tmdb_icon.svg';\r\nconst Footer = () => {\r\n    return (\r\n        <footer className=\"footer\">\r\n            <div>\r\n                <nav className=\"footer_nav\">\r\n                    <ul className=\"footer_links_list\">\r\n                        <li><a className=\"footer_link\" href=\"https://twitter.com/andrea114am\" target=\"_blank\" rel=\"noreferrer\" title=\"twitter.com/andrea114am\"><i className=\"fab fa-twitter\"></i></a></li>\r\n                        <li><a className=\"footer_link\" href=\"https://www.linkedin.com/in/andrea-aguado-moleon/\" target=\"_blank\" rel=\"noreferrer\" title=\"linkedin.com/in/andrea-aguado-moleón/\"><i className=\"fab fa-linkedin-in\"></i></a></li>\r\n                        <li><a className=\"footer_link\" href=\"https://github.com/AndreaAguado\" target=\"_blank\" rel=\"noreferrer\" title=\"github.com/AndreaAguado\"><i className=\"fab fa-github\"></i></a></li>\r\n                    </ul>\r\n                </nav>\r\n                <small className=\"footer_small\">Hecho con <span role=\"img\" aria-label=\"emoji corazón\" title=\"emoji corazón\">&#10084;&#65039;</span> &copy; Andrea Aguado 2021</small>\r\n            </div>\r\n            <div className=\"footer_credit_container\">\r\n                <a className=\"footer_credit_link\" href=\"https://www.themoviedb.org/\" target=\"_blank\" rel=\"noreferrer\" title=\"https://www.themoviedb.org/\">\r\n                    <img className=\"footer_credit_img\" src={tmbdLogo} alt=\"The Movie Database Logo\" />\r\n                </a>\r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\nexport default Footer;","export default __webpack_public_path__ + \"static/media/Logo-Netflix.a3092e10.png\";","import '../styles/layout/Header.scss';\r\nimport netflixLogo from '../images/Logo-Netflix.png';\r\nimport { Link } from 'react-router-dom';\r\nconst Header = () => {\r\n    return (\r\n        <header className=\"header\">\r\n            <Link to=\"/\" className=\"header_link\" title=\"Go to homepage\">\r\n                <img className=\"header_logo\" src={netflixLogo} alt=\"Logo Netflix\" />\r\n            </Link>\r\n        </header>\r\n    )\r\n}\r\nexport default Header;","import '../styles/layout/Filter.scss';\r\n\r\nconst Filter = (props) => {\r\n    const handleChange = (ev) => {\r\n        props.handleSearch(ev.target.value);\r\n\r\n    }\r\n    return (\r\n        <form className=\"form\" onSubmit={(ev) => ev.preventDefault()} action=\"POST\">\r\n            <input\r\n                autoFocus\r\n                onKeyUp={handleChange}\r\n                className=\"text_input\"\r\n                type=\"text\"\r\n                placeholder=\"TV show / movie title\" />\r\n        </form>\r\n    )\r\n}\r\nexport default Filter;","import '../styles/layout/Loader.scss';\r\nconst Loader = (props) => {\r\n    const displayLoader = () => {\r\n        if (props.loading) {\r\n            const className = '';\r\n            return className;\r\n        }\r\n        else {\r\n            const className = 'hidden';\r\n            return className;\r\n        }\r\n    }\r\n    return (\r\n        <div className={`lds-default ${displayLoader()}`}><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n    )\r\n}\r\nexport default Loader;","import '../styles/layout/Main.scss';\r\nimport Filter from './Filter';\r\nimport Loader from './Loader';\r\n\r\nconst Main = (props) => {\r\n\r\n    return (\r\n        <main className=\"main\">\r\n            <Filter handleSearch={props.handleSearch}></Filter>\r\n            <Loader loading={props.loading}></Loader>\r\n            <ul className=\"media_list\">\r\n                {props.renderMedia()}\r\n            </ul>\r\n        </main>\r\n    )\r\n}\r\nexport default Main;","const getConfiguration = () => {\r\n    return fetch(\"https://api.themoviedb.org/3/configuration?api_key=4e51e4a6310fb8de7132d513c50b9a9a\")\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            const result = response.images.secure_base_url + response.images.backdrop_sizes[3];\r\n            return result;\r\n        })\r\n}\r\n\r\nconst getTrendingMedia = () => {\r\n    return fetch(\"https://api.themoviedb.org/3/trending/all/week?api_key=4e51e4a6310fb8de7132d513c50b9a9a\")\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            console.log(response);\r\n            return response.results.map((movie => {\r\n                return {\r\n                    id: movie.id,\r\n                    imagePath: movie.poster_path,\r\n                    titleMovie: movie.original_title,\r\n                    titleShow: movie.name,\r\n                    mediaType: movie.media_type,\r\n                    genre: movie.genre_ids,\r\n                    banner: movie.backdrop_path,\r\n                    overview: movie.overview\r\n                }\r\n            }))\r\n        })\r\n}\r\n\r\nconst getMovieGenres = () => {\r\n    return fetch(\"https://api.themoviedb.org/3/genre/movie/list?api_key=4e51e4a6310fb8de7132d513c50b9a9a&language=en-US\")\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            return response.genres.map((genre) => {\r\n                return {\r\n                    id: genre.id,\r\n                    name: genre.name\r\n                }\r\n            })\r\n        })\r\n}\r\n\r\nconst getShowGenres = () => {\r\n    return fetch(\"https://api.themoviedb.org/3/genre/tv/list?api_key=4e51e4a6310fb8de7132d513c50b9a9a&language=en-US\")\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            return response.genres.map((genre) => {\r\n                return {\r\n                    id: genre.id,\r\n                    name: genre.name\r\n                }\r\n            })\r\n        })\r\n}\r\nconst objectToExport = {\r\n    getConfiguration: getConfiguration,\r\n    getTrendingMedia: getTrendingMedia,\r\n    getMovieGenres: getMovieGenres,\r\n    getShowGenres: getShowGenres\r\n}\r\nexport default objectToExport;","import '../styles/layout/MediaDetails.scss';\r\nimport { Link } from 'react-router-dom';\r\nconst MediaDetails = (props) => {\r\n    const genres = () => {\r\n        const genreList = props.whatGenre(props.media.mediaType, props.media.genre);\r\n        let genreAsParagraph = '';\r\n        for (const genre of genreList) {\r\n            genreAsParagraph += `${genre}, `;\r\n        }\r\n        return genreAsParagraph;\r\n    }\r\n    return (\r\n        <section\r\n            className=\"media_details_section\" >\r\n            <div className=\"return_link_container\">\r\n                <Link className=\"return_link\" to=\"/\">\r\n                    <i className=\"return_link_icon fas fa-chevron-circle-left\"></i>\r\n                    <p className=\"return_link_title\">Return</p>\r\n                </Link>\r\n            </div>\r\n            < img className=\"media_details_img\" src={props.imagePath + props.media.banner} alt=\"img\" />\r\n            <div className=\"media_details_info\">\r\n                <h3 className=\"media_details_title\">{props.media.titleMovie ? props.media.titleMovie : props.media.titleShow}</h3>\r\n                <p className=\"media_details_overview\">\r\n                    {props.media.overview}\r\n                </p>\r\n                <p className=\"media_details_genres\">Genres: {genres()}</p>\r\n            </div>\r\n        </section >\r\n    )\r\n}\r\nexport default MediaDetails;","import '../styles/App.scss';\nimport Footer from './Footer';\nimport Header from './Header';\nimport Main from './Main';\nimport { useEffect, useState } from 'react';\nimport { Switch, Route, useRouteMatch, Link } from 'react-router-dom';\nimport callToApi from '../services/callToApi';\nimport MediaDetails from './MediaDetails';\n\nconst App = () => {\n  const [imagePath, setiImagePath] = useState('');\n  const [mediaToRender, setMediaToRender] = useState([]);\n  const [movieGenres, setMovieGenres] = useState([]);\n  const [showGenres, setShowGenres] = useState([]);\n  const [search, setSearch] = useState('');\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    callToApi.getConfiguration().then(response => {\n      setiImagePath(response);\n    });\n  }, []);\n  useEffect(() => {\n    callToApi.getMovieGenres().then(response => {\n      setMovieGenres(response);\n    })\n  }, []);\n\n  useEffect(() => {\n    callToApi.getShowGenres().then(response => {\n      setShowGenres(response)\n    })\n  }, []);\n  useEffect(() => {\n    callToApi.getTrendingMedia().then(response => {\n      setMediaToRender(response);\n      console.log(response);\n      setLoading(false);\n    });\n  }, []);\n\n\n  const whatGenre = (mediaType, genreIdList) => {\n    if (mediaType === \"movie\") {\n      const genresNames = genreIdList.map((genreId) => {\n        return movieGenres.find((genre) => {\n          return genre.id === genreId;\n        })\n      })\n      const trueNames = genresNames.map((genre) => {\n        return genre.name;\n      })\n      return trueNames;\n    }\n    else {\n      const genresNames = genreIdList.map((genreId) => {\n        return showGenres.find((genre) => {\n          return genre.id === genreId;\n        })\n      })\n      const trueNames = genresNames.map((genre) => {\n        return genre.name;\n      })\n      return trueNames;\n    }\n  }\n\n  let filteredData = mediaToRender.filter((media) => {\n    if (media.mediaType === 'movie') {\n      return media.titleMovie.toLocaleLowerCase().includes(search.toLocaleLowerCase());\n    }\n    else {\n      return media.titleShow.toLocaleLowerCase().includes(search.toLocaleLowerCase());\n    }\n  })\n\n  const handleSearch = (value) => {\n    setSearch(value);\n  }\n  const renderMedia = () => {\n    if (filteredData.length < 1) {\n      return (\n        <li>\n          <p className=\"warning_message\">Nothing matches your search</p>\n        </li>\n      )\n    }\n    else {\n      return filteredData.map((movie) => {\n        // const genreList = whatGenre(movie.mediaType, movie.genre);\n        // let genreAsParagraph = '';\n        // for (const genre of genreList) {\n        //   genreAsParagraph += `${genre}, `;\n        // }\n        return (\n          <li id={movie.id} key={movie.id} className=\"media_list_item\">\n            <Link className=\"media_list_item_content\" to={`/media/${movie.id}`} title={movie.titleMovie ? movie.titleMovie : movie.titleShow} >\n              <img className=\"media_img\" src={imagePath + movie.imagePath} alt={movie.titleMovie ? movie.titleMovie : movie.titleShow} />\n              <div className=\"media_info\">\n                <h3 className=\"media_title\">{movie.titleMovie ? movie.titleMovie : movie.titleShow}</h3>\n                {/* <p className=\"media_genres\">{genreAsParagraph}</p> */}\n              </div>\n            </Link>\n          </li>\n        )\n      })\n    }\n\n  }\n\n  const routeData = useRouteMatch('/media/:id');\n  const mediaId = routeData !== null ? routeData.params.id : '';\n  const clickedMedia = mediaToRender.find((media) => media.id === parseInt(mediaId));\n\n  return (\n    <div className=\"page\">\n      <Switch>\n        <Route exact path=\"/\">\n          <Header></Header>\n          <Main renderMedia={renderMedia} handleSearch={handleSearch} loading={loading}></Main>\n          <Footer></Footer>\n        </Route>\n        <Route path=\"/media/:id\">\n          <Header></Header>\n          <MediaDetails imagePath={imagePath} media={clickedMedia} whatGenre={whatGenre}></MediaDetails>\n          <Footer></Footer>\n        </Route>\n      </Switch>\n    </div>\n  );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n// import { BrowserRouter } from 'react-router-dom'; //Use BrowserRouter instead of HashRouter when I have access to my server configuration\nimport App from './components/App';\n\nReactDOM.render(\n    <HashRouter>\n        <App />\n    </HashRouter> ,   \n    //   <BrowserRouter>\n    //   <App />\n    // </BrowserRouter>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}