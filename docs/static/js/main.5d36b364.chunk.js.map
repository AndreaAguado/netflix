{"version":3,"sources":["images/tmdb_icon.svg","components/Footer.js","images/Logo-Netflix.png","components/Header.js","components/Filter.js","components/Loader.js","components/NavBar.js","components/Main.js","services/callToApi.js","components/MediaDetails.js","components/App.js","index.js"],"names":["Footer","className","href","target","rel","title","role","src","tmbdLogo","alt","Header","to","netflixLogo","Filter","props","onSubmit","ev","preventDefault","action","autoFocus","onKeyUp","handleSearch","value","type","placeholder","Loader","loading","displayLoader","NavBar","pageNum","onClick","handlePrevPage","onChange","numberOfPages","handlePageInput","parseInt","max","totalPages","min","name","id","handleNextPage","defaultProps","Main","renderMedia","objectToExport","getConfiguration","fetch","then","response","json","images","secure_base_url","backdrop_sizes","getNumberOfPages","total_pages","getTrendingMedia","page_num","console","log","results","map","movie","imagePath","poster_path","titleMovie","originalTitleMovie","original_title","titleShow","originalTitleShow","original_name","mediaType","media_type","genre","genre_ids","banner","backdrop_path","overview","getMovieGenres","genres","getShowGenres","MediaDetails","media","genreList","whatGenre","genreAsParagraph","App","useState","setiImagePath","mediaToRender","setMediaToRender","movieGenres","setMovieGenres","showGenres","setShowGenres","search","setSearch","setLoading","setTotalPages","setPageNum","useEffect","callToApi","filteredData","filter","toLocaleLowerCase","includes","routeData","useRouteMatch","mediaId","params","clickedMedia","find","exact","path","length","genreIdList","genreId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5d36b364.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/tmdb_icon.de1a664e.svg\";","import '../styles/layout/Footer.scss';\r\nimport tmbdLogo from '../images/tmdb_icon.svg';\r\nconst Footer = () => {\r\n    return (\r\n        <footer className=\"footer\">\r\n            <div>\r\n                <nav className=\"footer_nav\">\r\n                    <ul className=\"footer_links_list\">\r\n                        <li><a className=\"footer_link\" href=\"https://twitter.com/andrea114am\" target=\"_blank\" rel=\"noreferrer\" title=\"twitter.com/andrea114am\"><i className=\"fab fa-twitter\"></i></a></li>\r\n                        <li><a className=\"footer_link\" href=\"https://www.linkedin.com/in/andrea-aguado-moleon/\" target=\"_blank\" rel=\"noreferrer\" title=\"linkedin.com/in/andrea-aguado-moleón/\"><i className=\"fab fa-linkedin-in\"></i></a></li>\r\n                        <li><a className=\"footer_link\" href=\"https://github.com/AndreaAguado\" target=\"_blank\" rel=\"noreferrer\" title=\"github.com/AndreaAguado\"><i className=\"fab fa-github\"></i></a></li>\r\n                    </ul>\r\n                </nav>\r\n                <small className=\"footer_small\">Hecho con <span role=\"img\" aria-label=\"emoji corazón\" title=\"emoji corazón\">&#10084;&#65039;</span> &copy; Andrea Aguado 2021</small>\r\n            </div>\r\n            <div className=\"footer_credit_container\">\r\n                <a className=\"footer_credit_link\" href=\"https://www.themoviedb.org/\" target=\"_blank\" rel=\"noreferrer\" title=\"https://www.themoviedb.org/\">\r\n                    <img className=\"footer_credit_img\" src={tmbdLogo} alt=\"The Movie Database Logo\" />\r\n                </a>\r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\nexport default Footer;","export default __webpack_public_path__ + \"static/media/Logo-Netflix.a3092e10.png\";","import '../styles/layout/Header.scss';\r\nimport netflixLogo from '../images/Logo-Netflix.png';\r\nimport { Link } from 'react-router-dom';\r\nconst Header = () => {\r\n    return (\r\n        <header className=\"header\">\r\n            <Link to=\"/\" className=\"header_link\" title=\"Go to homepage\">\r\n                <img className=\"header_logo\" src={netflixLogo} alt=\"Logo Netflix\" />\r\n            </Link>\r\n        </header>\r\n    )\r\n}\r\nexport default Header;","import '../styles/layout/Filter.scss';\r\n\r\nconst Filter = (props) => {\r\n    const handleChange = (ev) => {\r\n        props.handleSearch(ev.target.value);\r\n\r\n    }\r\n    return (\r\n        <form className=\"form\" onSubmit={(ev) => ev.preventDefault()} action=\"POST\">\r\n            <input\r\n                autoFocus\r\n                onKeyUp={handleChange}\r\n                className=\"text_input\"\r\n                type=\"text\"\r\n                placeholder=\"TV show / movie title\" />\r\n        </form>\r\n    )\r\n}\r\nexport default Filter;","import '../styles/layout/Loader.scss';\r\nconst Loader = (props) => {\r\n    const displayLoader = () => {\r\n        if (props.loading) {\r\n            const className = '';\r\n            return className;\r\n        }\r\n        else {\r\n            const className = 'hidden';\r\n            return className;\r\n        }\r\n    }\r\n    return (\r\n        <div className={`lds-default ${displayLoader()}`}><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n    )\r\n}\r\nexport default Loader;","import '../styles/layout/NavBar.scss';\r\nimport PropTypes from 'prop-types';\r\nconst NavBar = (props) => {\r\n    const handleChange = (ev) => {\r\n        if (ev.target.value > props.numberOfPages) {\r\n            props.handlePageInput(props.numberOfPages);\r\n        }\r\n        else {\r\n            props.handlePageInput(parseInt(ev.target.value));\r\n        }\r\n\r\n    }\r\n    return (\r\n        <nav className=\"pages_nav_bar\">\r\n            <button className={props.pageNum === 1 ? 'hidden' : 'pages_nav_bar_button'} onClick={props.handlePrevPage}><i className=\"fas fa-angle-left\"></i> Previous</button>\r\n            <p className=\"pages_nav_bar_index\">Page\r\n                <input onChange={handleChange} className=\"input_page_number\" type=\"number\" max={props.totalPages} min=\"1\" name=\"inputPage\" id=\"inputPage\" placeholder=\"Ej. 2\" value={props.pageNum} />\r\n                of {props.totalPages}</p>\r\n\r\n            <button className={props.pageNum === props.numberOfPages ? 'hidden' : 'pages_nav_bar_button'} onClick={props.handleNextPage}>Next <i className=\"fas fa-angle-right\"></i></button>\r\n        </nav>\r\n    )\r\n}\r\nNavBar.propTypes = {\r\n    pageNum: PropTypes.number,\r\n};\r\n\r\nNavBar.defaultProps = {\r\n    pageNum: 1,\r\n};\r\n\r\nexport default NavBar;","import '../styles/layout/Main.scss';\r\nimport Filter from './Filter';\r\nimport Loader from './Loader';\r\nimport NavBar from './NavBar';\r\n\r\nconst Main = (props) => {\r\n\r\n    return (\r\n        <main className=\"main\">\r\n            <Filter handleSearch={props.handleSearch}></Filter>\r\n            <NavBar pageNum={props.pageNum} totalPages={props.totalPages} handlePrevPage={props.handlePrevPage} handleNextPage={props.handleNextPage} handlePageInput={props.handlePageInput}></NavBar>\r\n            <Loader loading={props.loading}></Loader>\r\n            <ul className=\"media_list\">\r\n                {props.renderMedia()}\r\n            </ul>\r\n            <NavBar pageNum={props.pageNum} totalPages={props.totalPages} handlePrevPage={props.handlePrevPage} handleNextPage={props.handleNextPage} handlePageInput={props.handlePageInput}></NavBar>\r\n        </main>\r\n    )\r\n}\r\nexport default Main;","const getConfiguration = () => {\r\n    return fetch(\"https://api.themoviedb.org/3/configuration?api_key=4e51e4a6310fb8de7132d513c50b9a9a\")\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            const result = response.images.secure_base_url + response.images.backdrop_sizes[3];\r\n            return result;\r\n        })\r\n}\r\n\r\nconst getNumberOfPages = () => {\r\n    return fetch(\"https://api.themoviedb.org/3/trending/all/day?api_key=4e51e4a6310fb8de7132d513c50b9a9a\")\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            return response.total_pages;\r\n        })\r\n}\r\n\r\nconst getTrendingMedia = (page_num) => {\r\n    return fetch(`https://api.themoviedb.org/3/trending/all/day?api_key=4e51e4a6310fb8de7132d513c50b9a9a&page=${page_num}`)\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            console.log(response);\r\n            return response.results.map((movie => {\r\n                return {\r\n                    id: movie.id,\r\n                    imagePath: movie.poster_path,\r\n                    titleMovie: movie.title,\r\n                    originalTitleMovie: movie.original_title,\r\n                    titleShow: movie.name,\r\n                    originalTitleShow: movie.original_name,\r\n                    mediaType: movie.media_type,\r\n                    genre: movie.genre_ids,\r\n                    banner: movie.backdrop_path,\r\n                    overview: movie.overview\r\n                }\r\n            }))\r\n        })\r\n}\r\n\r\nconst getMovieGenres = () => {\r\n    return fetch(\"https://api.themoviedb.org/3/genre/movie/list?api_key=4e51e4a6310fb8de7132d513c50b9a9a&language=en-US\")\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            return response.genres.map((genre) => {\r\n                return {\r\n                    id: genre.id,\r\n                    name: genre.name\r\n                }\r\n            })\r\n        })\r\n}\r\n\r\nconst getShowGenres = () => {\r\n    return fetch(\"https://api.themoviedb.org/3/genre/tv/list?api_key=4e51e4a6310fb8de7132d513c50b9a9a&language=en-US\")\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            return response.genres.map((genre) => {\r\n                return {\r\n                    id: genre.id,\r\n                    name: genre.name\r\n                }\r\n            })\r\n        })\r\n}\r\nconst objectToExport = {\r\n    getConfiguration: getConfiguration,\r\n    getNumberOfPages: getNumberOfPages,\r\n    getTrendingMedia: getTrendingMedia,\r\n    getMovieGenres: getMovieGenres,\r\n    getShowGenres: getShowGenres\r\n}\r\nexport default objectToExport;","import '../styles/layout/MediaDetails.scss';\r\nimport { Link } from 'react-router-dom';\r\nconst MediaDetails = (props) => {\r\n    const genres = () => {\r\n        const genreList = props.whatGenre(props.media.mediaType, props.media.genre);\r\n        let genreAsParagraph = '';\r\n        for (const genre of genreList) {\r\n            genreAsParagraph += `${genre}, `;\r\n        }\r\n        return genreAsParagraph;\r\n    }\r\n    return (\r\n        <section\r\n            className=\"media_details_section\" >\r\n            <div className=\"return_link_container\">\r\n                <Link className=\"return_link\" to=\"/\">\r\n                    <i className=\"return_link_icon fas fa-chevron-circle-left\"></i>\r\n                    <p className=\"return_link_title\">Return</p>\r\n                </Link>\r\n            </div>\r\n            < img className=\"media_details_img\" src={props.imagePath + props.media.banner} alt=\"img\" />\r\n            <div className=\"media_details_info\">\r\n                <h3 className=\"media_details_title\">{props.media.titleMovie ? props.media.titleMovie : props.media.titleShow}</h3>\r\n                <p className=\"media_details_overview\">\r\n                    {props.media.overview}\r\n                </p>\r\n                <p className=\"media_details_genres\">Genres: {genres()}</p>\r\n            </div>\r\n        </section >\r\n    )\r\n}\r\nexport default MediaDetails;","import '../styles/App.scss';\nimport Footer from './Footer';\nimport Header from './Header';\nimport Main from './Main';\nimport { useEffect, useState } from 'react';\nimport { Switch, Route, useRouteMatch, Link } from 'react-router-dom';\nimport callToApi from '../services/callToApi';\nimport MediaDetails from './MediaDetails';\n\nconst App = () => {\n  const [imagePath, setiImagePath] = useState('');\n  const [mediaToRender, setMediaToRender] = useState([]);\n  const [movieGenres, setMovieGenres] = useState([]);\n  const [showGenres, setShowGenres] = useState([]);\n  const [search, setSearch] = useState('');\n  const [loading, setLoading] = useState(true);\n  let pageNumCont;\n  const [totalPages, setTotalPages] = useState(0);\n  const [pageNum, setPageNum] = useState(1);\n\n\n  useEffect(() => {\n    callToApi.getConfiguration().then(response => {\n      setiImagePath(response);\n    });\n  }, []);\n  useEffect(() => {\n    callToApi.getMovieGenres().then(response => {\n      setMovieGenres(response);\n    })\n  }, []);\n\n  useEffect(() => {\n    callToApi.getShowGenres().then(response => {\n      setShowGenres(response)\n    })\n  }, []);\n\n  useEffect(() => {\n    callToApi.getNumberOfPages().then(response => {\n      setTotalPages(response);\n    })\n  }, []);\n\n  useEffect(() => {\n    callToApi.getTrendingMedia(pageNum).then(response => {\n      setMediaToRender(response);\n      console.log(response);\n      setLoading(false);\n    });\n  }, [pageNum]);\n\n\n  const whatGenre = (mediaType, genreIdList) => {\n    if (mediaType === \"movie\") {\n      const genresNames = genreIdList.map((genreId) => {\n        return movieGenres.find((genre) => {\n          return genre.id === genreId;\n        })\n      })\n      const trueNames = genresNames.map((genre) => {\n        return genre.name;\n      })\n      return trueNames;\n    }\n    else {\n      const genresNames = genreIdList.map((genreId) => {\n        return showGenres.find((genre) => {\n          return genre.id === genreId;\n        })\n      })\n      const trueNames = genresNames.map((genre) => {\n        return genre.name;\n      })\n      return trueNames;\n    }\n  }\n\n  let filteredData = mediaToRender.filter((media) => {\n    if (media.mediaType === 'movie') {\n      return (media.titleMovie || media.originalTitleMovie).toLocaleLowerCase().includes(search.toLocaleLowerCase()) || (media.originalTitleMovie || media.originalTitleMovie).toLocaleLowerCase().includes(search.toLocaleLowerCase());\n    }\n    else {\n      return media.titleShow.toLocaleLowerCase().includes(search.toLocaleLowerCase()) || media.originalTitleShow.toLocaleLowerCase().includes(search.toLocaleLowerCase());\n    }\n  })\n\n  const handleSearch = (value) => {\n    setSearch(value);\n  }\n  const renderMedia = () => {\n    if (filteredData.length < 1) {\n      return (\n        <li>\n          <p className=\"warning_message\">Nothing matches your search</p>\n        </li>\n      )\n    }\n    else {\n      return filteredData.map((movie) => {\n        // const genreList = whatGenre(movie.mediaType, movie.genre);\n        // let genreAsParagraph = '';\n        // for (const genre of genreList) {\n        //   genreAsParagraph += `${genre}, `;\n        // }\n        return (\n          <li id={movie.id} key={movie.id} className=\"media_list_item\">\n            <Link className=\"media_list_item_content\" to={`/media/${movie.id}`} title={movie.titleMovie ? movie.titleMovie : movie.titleShow} >\n              <img className=\"media_img\" src={imagePath + movie.imagePath} alt={movie.titleMovie ? movie.titleMovie : movie.titleShow} />\n              <div className=\"media_info\">\n                <h3 className=\"media_title\">{movie.titleMovie ? movie.titleMovie : movie.titleShow}</h3>\n                {/* <p className=\"media_genres\">{genreAsParagraph}</p> */}\n              </div>\n            </Link>\n          </li>\n        )\n      })\n    }\n\n  }\n\n  const handleNextPage = (ev) => {\n    pageNumCont = pageNum + 1;\n    setPageNum(pageNumCont);\n  }\n\n  const handlePrevPage = (ev) => {\n    pageNumCont = pageNum - 1;\n    setPageNum(pageNumCont);\n  }\n\n  const handlePageInput = (value) => {\n    setPageNum(value);\n  }\n  const routeData = useRouteMatch('/media/:id');\n  const mediaId = routeData !== null ? routeData.params.id : '';\n  const clickedMedia = mediaToRender.find((media) => media.id === parseInt(mediaId));\n\n  return (\n    <div className=\"page\">\n      <Switch>\n        <Route exact path=\"/\">\n          <Header></Header>\n          <Main renderMedia={renderMedia} handleSearch={handleSearch} loading={loading} pageNum={pageNum} totalPages={totalPages} handlePrevPage={handlePrevPage} handleNextPage={handleNextPage} handlePageInput={handlePageInput}></Main>\n          <Footer></Footer>\n        </Route>\n        <Route path=\"/media/:id\">\n          <Header></Header>\n          <MediaDetails imagePath={imagePath} media={clickedMedia} whatGenre={whatGenre}></MediaDetails>\n          <Footer></Footer>\n        </Route>\n      </Switch>\n    </div>\n  );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n// import { BrowserRouter } from 'react-router-dom'; //Use BrowserRouter instead of HashRouter when I have access to my server configuration\nimport App from './components/App';\n\nReactDOM.render(\n    <HashRouter>\n        <App />\n    </HashRouter> ,   \n    //   <BrowserRouter>\n    //   <App />\n    // </BrowserRouter>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}